// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gym_membership.Models;

#nullable disable

namespace gym_membership.Migrations
{
    [DbContext(typeof(GymDbContext))]
    partial class GymDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gym_membership.Models.BloodGroup", b =>
                {
                    b.Property<int>("BloodGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodGroupId"));

                    b.Property<string>("BloodGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BloodGroupId");

                    b.ToTable("BloodGroups");
                });

            modelBuilder.Entity("gym_membership.Models.GymTrainee", b =>
                {
                    b.Property<int>("TraineeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TraineeId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("BloodGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TrainingLevelId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("TraineeId");

                    b.HasIndex("BloodGroupId");

                    b.HasIndex("TrainingLevelId");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("gym_membership.Models.MonthlyFeeVoucher", b =>
                {
                    b.Property<int>("MonthlyFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonthlyFeeId"));

                    b.Property<DateTime>("FeeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("MonthlyFeeId");

                    b.HasIndex("TraineeId");

                    b.ToTable("MonthlyFeeVouchers");
                });

            modelBuilder.Entity("gym_membership.Models.TrainingLevel", b =>
                {
                    b.Property<int>("TrainingLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingLevelId"));

                    b.Property<string>("TrainingLevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingLevelId");

                    b.ToTable("TrainingLevels");
                });

            modelBuilder.Entity("gym_membership.Models.GymTrainee", b =>
                {
                    b.HasOne("gym_membership.Models.BloodGroup", null)
                        .WithMany("GymTrainees")
                        .HasForeignKey("BloodGroupId");

                    b.HasOne("gym_membership.Models.TrainingLevel", null)
                        .WithMany("GymTrainees")
                        .HasForeignKey("TrainingLevelId");
                });

            modelBuilder.Entity("gym_membership.Models.MonthlyFeeVoucher", b =>
                {
                    b.HasOne("gym_membership.Models.GymTrainee", "GymTrainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GymTrainee");
                });

            modelBuilder.Entity("gym_membership.Models.BloodGroup", b =>
                {
                    b.Navigation("GymTrainees");
                });

            modelBuilder.Entity("gym_membership.Models.TrainingLevel", b =>
                {
                    b.Navigation("GymTrainees");
                });
#pragma warning restore 612, 618
        }
    }
}
